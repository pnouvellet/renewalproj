{
    "collab_server" : "",
    "contents" : "#' simulate renewal process\n#'\n#'\n#'  simulate poisson renewal based process in independent location\n#'\n#'\n#' @author Pierre Nouvellet (\\email{p.nouvellet@imperial.ac.uk})\n#'\n#' @export\n#'\n#' @param N_Week_Est (a single integer) number of week of simulation. the simulation output is daily numbers\n#' This can be any positive number.\n#'\n#' @param N_location (a single integer) number of of independent location.\n#'\n#' @param R: (a vector of real positive(s) of size N_location) the reproduction number at each location.\n#'\n#' @param Mean_SI (a single real positive) mean of the serial interval.\n#'\n#' @param CV_SI (a single real positive) coefficient of variation of the serial interval.\n#'\n#' @param SI_trunc (a single real positive) threshold/cut-off for the serial interval calculation  \n#'\n#' @param I_start: (a vector of integer(s) of size N_location) initial size of the outbreak(s). \n#'Tthe output excludes those and return simulated incidence from the following day\n#'\n#'\n#' @return\n#'  The function returns simulated time series. the list return include $Incidence: the daily incidence, \n#'  and $SI_Distr  daily value of the serial interval from the same day of symptoms onset up to \n#'  SI_trunc+1 after the day of symptoms onset\n#'\n#'\n#' @examples\n#'\n#' \n#'\nsimulate_poisson <- function(N_Week_Est,N_location,R,Mean_SI,CV_SI,SI_trunc,I_start)\n{\n  t_sim <- 7*N_Week_Est+1\n  SI_Distr <- vector()\n  for(i in 0:SI_trunc) SI_Distr[i+1] <- DiscrSI(i, Mean_SI, CV_SI*Mean_SI)\n  SI_Distr<-SI_Distr/sum(SI_Distr)\n  # plot(0:SI_trunc,SI_Distr)\n  ws <- rev(SI_Distr) # reversed to use as past infectivity\n  \n  # simulate incidence\n  I <- matrix(0,N_location,t_sim) # declare simulated incidence\n  I[,1:ncol(I_start)] <- I_start\n  for (i in (ncol(I_start)+1):t_sim){\n    f=max(c(1,(i-SI_trunc))) # truncated the incidence according to SI truncation\n    lambda <- I[,f:i]%*%ws[((SI_trunc+1)-(i-f)):(SI_trunc+1)]\n    I[,i]=rpois(N_location,R*lambda)\n  }\n  # plot(I[1,])\n  # lines(I[2,],type = \"p\",col='red')\n  return(list(Incidence=I,SI_Distr=SI_Distr))\n}",
    "created" : 1494943336674.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1267626439",
    "id" : "B94B5FD3",
    "lastKnownWriteTime" : 1494945111,
    "last_content_update" : 1494945111447,
    "path" : "~/R_packages/renewalproj/R/simulate_poisson.R",
    "project_path" : "R/simulate_poisson.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}