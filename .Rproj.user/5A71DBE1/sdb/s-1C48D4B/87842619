{
    "collab_server" : "",
    "contents" : "rm(list=ls(all.names=TRUE))\n\nlibrary(EpiEstim)\nsource('simulate_poisson.R')\n\n###############################\n### simulate incidence  ######\n##############################\n# # parameters\n# N_Week_Est <- 30\n# t_sim <- 7*N_Week_Est+1 # time window for R estimation\n# N_sim <- 2  # number of simulation, i.e. could be iteration of same place/different R/incidence, or different places altogheter\n# # trnamsissibility\n# R <-matrix(c(1.2,1.1),N_sim,1) # reproduction number\n# Mean_SI <- 15\n# CV_SI <- .8\n# SI_trunc <- 30\n# #initial conditions\n# I_start <- matrix(c(10,5),N_sim,1)  #\n# \n# # simulate incidence\n# S1 <-simulate_poisson(N_Week_Est,N_sim,R,Mean_SI,CV_SI,SI_trunc,I_start)\n# \n# #remove weird initial points\n# S1$Incidence <- S1$Incidence[,-1]\n# \n# #weekly\n# S1$WeeklyIncidence <- matrix(NA,N_sim,N_Week_Est)\n# for (i in 1:N_sim){\n#   S1$WeeklyIncidence[i,] <- colSums(matrix(S1$Incidence[i,],7,N_Week_Est))\n# }\n# ### plot\n# \n# \n# plot(colSums(matrix(S1$Incidence[1,],7,N_Week_Est)),ylim=c(0,max(S1$WeeklyIncidence)))\n# lines(colSums(matrix(S1$Incidence[2,],7,N_Week_Est)),type = \"p\",col='red')\n\n# save.image(file='D.RData')\n###########################################################\n#######   MCMC #########\n###########################################################\n\nload('D.RData')\n#  parameters\nrep <- 1e4\nI <- S1$Incidence\nMean_SI <- 15\nCV_SI <- .8\nSI_trunc <- 30\n# sigma_Prop <- rep(1.5e-1,N_sim*2)     # proposal variance\nsigma_Prop <- c(1.5e-1,1.5e-1,5e-1,5e-1)     # proposal variances\nT_prior <-1e2\n#window of estimation\nWind_range <- c(5,28)\nN_Week_Est <- diff(Wind_range)+1\nI_window <- I[,(1+(Wind_range[1]-1)*7):((Wind_range[2])*7)]\nI_window_week <- S1$WeeklyIncidence[,(Wind_range[1]):(Wind_range[2])]\n\nsource('foi_renewal.R')\nsource('Likelihood_renewal.R')\nsource('R_estim_MCMC.R')\n\n\nres <- R_estim_MCMC(rep=rep, I=I_window, \n                    Mean_SI=Mean_SI, CV_SI=CV_SI, SI_trunc=SI_trunc, \n                    sigma_Prop=sigma_Prop,T_prior=T_prior)\n  \n\n\nres$Acc_rate\n#########################\n# check\nburn <- round(rep/3)\nLf <- res$post_logLik[burn:rep,]\nthetaf <- res$post_theta[burn:rep,]\n# save(thetaf,Acc,Lf,file <- paste0(\"xxx.RData\"))\nplot(Lf[,1],ylab='log_likelihood')\nfor (i in 1:(2*N_sim)) {\n  if (i>N_sim){\n    plot(thetaf[,i],xlab='iteration',ylab='I0')\n    title(paste0('location ',i-2))\n  }else{\n    plot(thetaf[,i],xlab='iteration',ylab='R')\n    title(paste0('location ',i))\n  }\n    \n  if (i<3) lines(c(0,rep),c(R[i],R[i]),col='red')\n}\n\n\n###########################################################\n############   projecting cases forward       ###################\n###########################################################\nN_Week_Forward<-4\nN_simul <- 1e3\n\nsource('simulate_forward.R')\nI_predict <- simulate_forward(SI_Distr=res$SI_Distr, thetaf,\n                              N_simul=N_simul, T_prior=T_prior,\n                              N_sim=N_sim,N_Week_Forward=N_Week_Forward,\n                              N_Week_Est=N_Week_Est)\n\n\n##################################\n\n\n# ###########################################################\n# ############       Pull results         ###################\n# ###########################################################\n\n\nResProj<-array(NA,c(3,N_Week_Forward+N_Week_Est,N_sim))\nfor (i in 1:N_sim){\n  A <- I_predict$I_predict_week[,i,]\n  ResProj[,,i] <- apply(A,1,function(x) quantile(x,c(.25,.5,.75),na.rm=T))\n}\n\n\n# ###########################################################\n# ############       Plot             ###################\n# ###########################################################\n\n\ncol.scenarios <- c(\"Sc1\"=\"#4f81bd\",\"Sc2\"=\"#9bbb59\",\n                   \"Sc3\"=\"#c0504d\",\"Sc3\"=\"#e67e00\")\ncol.scenarios.transp <- paste(col.scenarios,\"55\",sep=\"\")\ncol.scenarios.transp2 <- paste(col.scenarios,\"35\",sep=\"\")\n\n# png(\"figs/TEST.png\",width=800,height=800,res=200)\n\nfor (i in 1:N_sim){\n  \n  \n  x <- Wind_range[1]:Wind_range[2]\n  \n  plot(S1$WeeklyIncidence[i,],\n       pch=1,lwd=2,\n       col='grey',\n       xlim=c(0,length(S1$WeeklyIncidence[i,])+N_Week_Forward+1),\n       ylim=c(0,max(S1$WeeklyIncidence)),\n       xlab='',ylab='',\n       main=paste('Site ',i,sep=''),\n       xaxt  = 'n',yaxt='n',bty='n')\n  \n  axis(side = 1, at = seq(0,length(S1$WeeklyIncidence[i,])+N_Week_Forward+1,by=5))\n  axis(side = 2, at = seq(0,max(S1$WeeklyIncidence),length=5))\n  mtext(\"Incidence (weekly)\",2,3,outer=FALSE,las=0,adj=-1.5)\n  mtext(\"Weeks\", 1, 4, outer=FALSE,padj=-2,adj=.25) \n  \n  # time window for estimation\n  points(x,I_window_week[i,],\n         pch=16,lwd=2,\n         col=col.scenarios[i])\n  \n  \n  x2<-seq(Wind_range[1],Wind_range[2]+N_Week_Forward)\n  lines(x2,ResProj[2,,i],\n        type='l',lwd=2, col=col.scenarios[i])\n  \n  #95%CrI\n  polygon(c(x2,rev(x2)),\n          c(ResProj[1,,i],rev(ResProj[3,,i])),\n          col = col.scenarios.transp[i],border=NA)\n    \n    \n  \n  # legend(\"topleft\",c(\"Data\",\"Fitted\",\"IQR\"),\n  #            col=c(col.scenarios[i],col.scenarios[i],\n  #                  col.scenarios.transp[i]),\n  #        lty=c(-1,1,-1),pch=c(19,-1,15),pt.cex=c(1,1,2),\n  #        lwd=c(2,2,1),cex=0.8,bty=\"n\")\n  legend(\"topleft\",c(\"Data\",\"Fitted\",\"95%CrI\"),\n         col=c(col.scenarios[i],col.scenarios[i],\n               col.scenarios.transp[i],\n               col.scenarios.transp2[i]),\n         lty=c(-1,1,-1,-1),pch=c(19,-1,15,15),pt.cex=c(1,1,2,2),\n         lwd=c(2,2,1,1),cex=0.8,bty=\"n\")\n  \n  \n}\n\napply(thetaf,2,function(x) quantile(x,c(.25,.5,.75),na.rm=T))\n",
    "created" : 1494944047293.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3939906347",
    "id" : "87842619",
    "lastKnownWriteTime" : 1494944951,
    "last_content_update" : 1494944951884,
    "path" : "~/R_packages/renewalproj/R/workflow.1.0.R",
    "project_path" : "R/workflow.1.0.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}