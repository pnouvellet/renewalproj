{
    "collab_server" : "",
    "contents" : "#' force of infection for renewal process\n#'\n#' ~internal function\n#'\n#' @author Pierre Nouvellet (\\email{p.nouvellet@imperial.ac.uk})\n#'\n#' @export\n#'\n#' @param I (a matrix of integer) daily time-series at the different location\n#' This can be any positive number.\n#'\n#' @param N (a single integer) number of of independent location.\n#'\n#' @param Theta: (a vector of real positive(s) of size 2 x N), from 1:N values of the reproduction number,\n#' and from (N+1):(2N) values of the back calculated incdence at time T_prior- first date of time window\n#'\n#' @param rSI (a vector of real positive) reversed serial interval distribution.\n#'\n#' @param T_prior (a single real positive) number of backward step for which incidence is backcalculated.\n#'\n#' @return\n#'  The function returns sum_{s=(t-SI_trunc)}^{t}(I_{t-s}w_s) for each day with the time window of interest.\n#'\n#'\n#' @examples\n#'\n#' \n#'\nfoi_renewal<-function(I,N,Theta,rSI,T_prior)\n{\n  I0 <- matrix(0,N,T_prior)\n  I0[,1] <- Theta[(N+1):(2*N)]\n  \n  SI_trunc <- length(rSI)-1\n  for (i in 2:T_prior){\n    f <- max(c(1,(i-SI_trunc)))\n    I0[,i] <- Theta[1:N]*(I0[,f:i]%*%rSI[((SI_trunc+1)-(i-f)):(SI_trunc+1)])\n  }\n  I_tot<- cbind(I0,I)\n  \n  lambda=matrix(NA,N,ncol(I))\n  for (k in (T_prior+1):ncol(I_tot)){\n    f=k-SI_trunc\n    lambda[,k-T_prior]=I_tot[,f:k]%*%rSI[((SI_trunc+1)-(k-f)):(SI_trunc+1)]\n  }\n  return(lambda)\n}",
    "created" : 1494944110655.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3644827800",
    "id" : "C38A1BD4",
    "lastKnownWriteTime" : 1494945116,
    "last_content_update" : 1494945116969,
    "path" : "~/R_packages/renewalproj/R/foi_renewal.R",
    "project_path" : "R/foi_renewal.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}